type: install
name: Strapi with MariaDB

globals:
  DB_NAME: strapi
  DB_USER: strapi_user
  DB_PASS: ${fn.password(12)}

nodes:
  - nodeType: mariadb-dockerized
    nodeGroup: sqldb
    displayName: db-node-${fn.random}
    diskLimit: 5
    cloudlets: 1
    flexibleCloudlets: 4
  - nodeType: nodejs
    nodeGroup: cp
    displayName: app-node-${fn.random}
    diskLimit: 5
    cloudlets: 1
    flexibleCloudlets: 4
    env:
      DATABASE_CLIENT: mysql
      DATABASE_HOST: ${nodes.sqldb.address}
      DATABASE_PORT: 3306
      DATABASE_USERNAME: ${globals.DB_USER}
      DATABASE_PASSWORD: ${globals.DB_PASS}
      DATABASE_NAME: ${globals.DB_NAME}

onInstall:
  - prepareSqlDatabase:
      nodeGroup: sqldb
      loginCredentials:
        user: root
        password: ${nodes.sqldb.password}
      newDatabaseName: ${globals.DB_NAME}
      newDatabaseUser:
        name: ${globals.DB_USER}
        password: ${globals.DB_PASS}
  - deploy [cp]:
      archive: https://github.com/strapi/strapi/archive/v3.4.5.zip
      name: strapi
      context: ROOT
  - cmd [cp]:
    - npm install
    - NODE_ENV=production npm run build
  - addEndpoint
  - return:
      result: success
      email: success
  
actions:
  addEndpoint:
    - api: environment.control.AddEndpoint
      nodeId: ${nodes.cp.id}
      privatePort: 1337
      protocol: TCP
      name: admin
    - setGlobals:  
        publicPort: ${response.object.publicPort}
        
success: |
  Your Strapi app is successfully installed. Please wait some time to finish installation scripts completed before your first visit to the admin section.
  **URL**: http://node${nodes.cp.id}-${env.domain}:${globals.publicPort}
